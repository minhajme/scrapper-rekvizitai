{% extends 'base.html.twig' %}

{% block title %}Scrapper rekvizitai.vz.lt{% endblock %}
{% block stylesheets %}
    <link href="{{ asset('bootstrap/css/bootstrap.min.css') }}" rel="stylesheet"/>
    <link href="{{ asset('datatables/datatables.min.css') }}" rel="stylesheet"/>
    <style>
        th {
            overflow: auto;
            white-space: nowrap;
        }
    </style>
{% endblock %}
{% block javascripts %}
    <script src="{{ asset('jquery/jquery-3.7.0.min.js') }}"></script>
    <script src="{{ asset('bootstrap/js/bootstrap.min.js') }}"></script>
    <script src="{{ asset('datatables/datatables.min.js') }}"></script>
{% endblock %}

{% block body %}
    <style>
        .example-wrapper {
            margin: 1em auto;
            max-width: 800px;
            width: 95%;
            font: 18px/1.5 sans-serif;
        }

        .example-wrapper code {
            background: #F5F5F5;
            padding: 2px 6px;
        }
    </style>

    <div class="example-wrapper">
        <table id="results-table">
        </table>
    </div>
    <script type="text/javascript">
        String.prototype.isNumeric = function() {
            return /^\d+$/.test(this);
        }
        String.prototype.trim_chars = function(charset, opts) {
            const { left, right } = opts;
            charset = charset || '';
            const pattern = `[\\s${charset}]+`;
            let regex = new RegExp(`^${pattern}|${pattern}$`, 'g');
            if (left) regex = new RegExp(`^${pattern}`);
            if (right) regex = new RegExp(`${pattern}$`);
            return this.replace(new RegExp(regex), '');
        };

        let table = $('#results-table').DataTable({
            ajax: {
                url: "{{ get_env('ENDPOINT_GETROWS') }}",
                contentType : 'application/x-www-form-urlencoded; charset=UTF-8',
            },
            columns: [
                {title: 'Company Name', data: 'name', searchable: false, type: 'string'},
                {title: 'Registration Code', data: 'reg', searchable: true, type: 'num'},
                {title: 'VAT', data: 'vat', searchable: false, type: 'string'},
                {title: 'Address', data: 'address', searchable: false, type: 'string'},
                {title: 'Mobile Number', data: 'mobile', searchable: false, type: 'string'},
                {title: 'Turnover', data: 'turnover', searchable: false, type: 'string'}
            ],
            columnDefs: [
                {target: '_all', className: 'oneline'}
            ],
            processing: true,
            search: {
                return: true,
            },
            serverSide: true,
        }).on('draw.dt', (e, settings) => {
            //const table = $('#results-table').DataTable();
            const rowsCount = settings.json.data.length;
            const search = settings.oPreviousSearch.sSearch;
            if (rowsCount || !search) return; // table not empty or not performed search

            // now its only when searched and no results returned
            //search = search.trim_chars(',');
            if (!/^\d{8}(,\d{8})*$/.test(search)) { // validate search term
                //const lengthError = search.length == 8 ? '' : 'each search term must be of 8 characters';
                //const typeError = search.isNumeric() ? '' : 'each search term must be all numeric';
                console.log(`CrawlError: scraper search terms must be of 8 characters and all numeric`);
            } else {
                console.log(`time to crawl with ${search}`);
                $.ajax({
                    url: "{{ get_env('ENDPOINT_SCRAPER') }}",
                    method: 'POST',
                    data: {search},
                    //contentType: 'application/json',
                    dataType: 'json',
                    success: (data) => {

                    }
                });
            }
        });
    </script>
{% endblock %}
